from msilib.schema import Class
from faker import Faker
fake = Faker("en_US")

class BaseContact:
    def __init__(self, name, surname, tel_priv, email):
        self.name = name
        self.surname = surname
        self.tel_priv = tel_priv
        self.email = email
        
    def contact(self):
        return f"Wybieram numer prywatny: {self.tel_priv} i dzwonie do {self.name} {self.surname}"
    def workcontact(self):
        return f"Wybieram numer sluzbowy: {self.tel_work} i dzwonie do {self.name} {self.surname}"
    
    @property
    def label_lenght(self):
        return sum([len(self.name), len(self.surname)])
    
class BusinessContact(BaseContact):
    def __init__(self, tel_work, company, occupation, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.tel_work = tel_work
        self.company = company
        self.occupation = occupation
human_1 = BusinessContact(name=fake.first_name(), surname=fake.last_name(), company=fake.company(), occupation=fake.job(),
              email=fake.email(), tel_priv=fake.phone_number(), tel_work=fake.phone_number())
    
    

    
def create_contacts(kind, how_many):
    contacts = []
    for i in range(how_many):
        if kind == 'b':
            contacts.append(BusinessContact)
        elif kind == 'h':
            contacts.append(BaseContact)
    return contacts

if __name__ == "__main__":
    kind = input("select the type of business card: b - business, h - home: ")
    how_many = int(input('please select number of cards '))
    contacts = create_contacts(kind, how_many)
    print(contacts)
print(human_1)
print(human_1.contact())
print(human_1.workcontact())
print(human_1.label_lenght)